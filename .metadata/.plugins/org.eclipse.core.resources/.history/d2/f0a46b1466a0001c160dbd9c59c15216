package org.gullon.pap2022.controller;

import java.nio.file.Files;

import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;


import org.gullon.pap2022.entities.Aficion;
import org.gullon.pap2022.entities.Pais;
import org.gullon.pap2022.entities.Persona;
import org.gullon.pap2022.exception.DangerException;
import org.gullon.pap2022.exception.InfoException;
import org.gullon.pap2022.exception.PRG;
import org.gullon.pap2022.repository.AficionRepository;
import org.gullon.pap2022.repository.PaisRepository;
import org.gullon.pap2022.repository.PersonaRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

@Controller
public class PersonaController {
	
	@Autowired
	private PersonaRepository personaRepository;
	
	@Autowired
	private PaisRepository paisRepository;
	
	
	
	@GetMapping("/persona/r")
	public String r(
			ModelMap m 
			) {
		
		List<Persona> personas = personaRepository.findAll();
		m.put("personas", personas);
		
		
		m.put("view", "persona/r");
		return "_t/frame";
	}
	
	
	@GetMapping("/persona/c")
	public String c(ModelMap m) {
		
		//Pasar la lista de paises/aficiones para poder llevartelas a la vista
		m.put("paises", paisRepository.findAll());
		m.put("aficiones", aficionRepository.findAll());
		 
		m.put("view", "persona/c");
		return "_t/frame";
	}
	
	
	@PostMapping("/persona/cPost")
	public void cPost(
			@RequestParam("nombre") String nombre, 
			@RequestParam("pwd") String pwd,
			//@RequestParam("foto") MultipartFile foto,
			@DateTimeFormat(iso = DateTimeFormat.ISO.DATE)
			@RequestParam("fecha") LocalDate fecha,  
			@RequestParam("IdPaisNace") Long IdPaisNace,
			@RequestParam("IdPaisReside") Long idReside,
			//Para que se puedan insertar tambien nulos
			@RequestParam(value="idsAficion[]",required=false) List<Long> idsAficiones,
			@RequestParam(value="idsAficionOdia[]",required=false) List<Long> idsAficionesOdia)throws DangerException, InfoException {
		
		try {
		Persona persona = new Persona(nombre,pwd,fecha,paisRepository.getById(IdPaisNace),paisRepository.getById(idReside));
		//Insertar cada una de las aficiones que le gustan recorriendo todas las que llegan
		if(idsAficiones != null) {
		  for(Long idAficion : idsAficiones) {
			  persona.addAficionGusta(aficionRepository.getById(idAficion));
		  }
		}
		
		if(idsAficionesOdia != null) {
			  for(Long idAficionO : idsAficionesOdia) {
				  persona.addAficionOdia(aficionRepository.getById(idAficionO));
			  }
			}
		
		//SUBIR FOTO
		//try { 
		//	byte[] bytes = foto.getBytes();
		//	Path path = Paths.get(UPLOADED_FOLDER + foto.getOriginalFilename());
		//	Files.write(path, bytes);
		//}

		//catch (Exception e) {
		//	PRG.error(e.getMessage());
		//}
			
		personaRepository.save(persona);

		}
		catch (Exception e){
			PRG.error("ERROR: " + e.getMessage(), "/persona/c");
		}
		
		PRG.info("Persona " + nombre + " creada correctamente", "/persona/r");
	}
	
	
	
}
